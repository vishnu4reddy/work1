name: Rebase Remaining PRs on Merge

on:
  push:
    branches:
      - main  # Trigger on main branch push (e.g., after merging a PR)

jobs:
  rebase:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "vishnu4reddy"
          git config user.email "vishnu4reddy@users.noreply.github.com"

      - name: Install GitHub CLI
        run: |
          sudo apt-get install gh

      - name: Get list of open PRs
        id: pr_list
        run: |
          prs=$(gh pr list --state open --json number,headRefName --jq '.[] | "\(.number) \(.headRefName)"')
          echo "::set-output name=prs::$prs"
          echo "$prs"

      - name: Rebase remaining PRs onto main branch
        run: |
          prs=$(gh pr list --state open --json number,headRefName)
          
          # Loop through each open PR and rebase
          echo "$prs" | jq -c '.[]' | while IFS= read -r pr; do
            pr_number=$(echo "$pr" | jq -r '.number')
            pr_branch=$(echo "$pr" | jq -r '.headRefName')

            if [ -z "$pr_branch" ]; then
              echo "::warning::Skipping PR #$pr_number because branch name is empty."
              continue
            fi

            echo "Rebasing PR #$pr_number ($pr_branch) onto main branch..."

            # Fetch the latest main and PR branch
            git fetch origin main
            git fetch origin "$pr_branch"

            # Checkout the PR branch
            git checkout "$pr_branch"

            # Rebase the PR branch onto the latest main branch
            if git rebase origin/main; then
              echo "Rebasing of PR #$pr_number ($pr_branch) successful!"

              # Force-push the rebased branch to the remote
              git push origin "$pr_branch" --force-with-lease
            else
              echo "::warning::Rebase failed for PR #$pr_number ($pr_branch). Skipping this PR."
              git rebase --abort
            fi
          done
    env:
      GH_TOKEN: ${{ github.token }}
