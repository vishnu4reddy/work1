name: Rebase Remaining PRs on Merge

on:
  push:
    branches:
      - main  # Trigger on main branch push (e.g., after merging a PR)

jobs:
  rebase:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Provide the token for authentication

      # Step 2: Set up Git with user info
      - name: Set up Git
        run: |
          git config user.name "vishnu4reddy"
          git config user.email "vishnu4reddy@users.noreply.github.com"

      # Step 3: Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt-get install gh

      # Step 4: Get list of open PRs and loop through each PR
      - name: Rebase PRs onto main branch
        run: |
          prs=$(gh pr list --state open --json number,headRefName --jq '.[] | "\(.number) \(.headRefName)"')
          echo "Found PRs: $prs"

          # Loop through each PR and rebase it onto main
          for pr in $prs; do
            pr_number=$(echo "$pr" | cut -d ' ' -f 1)
            pr_branch=$(echo "$pr" | cut -d ' ' -f 2)

            if [ -z "$pr_branch" ]; then
              echo "::warning::Skipping PR #$pr_number because branch name is empty."
              continue
            fi

            echo "Rebasing PR #$pr_number ($pr_branch) onto main branch..."

            # Fetch latest branches
            git fetch origin main
            git fetch origin "$pr_branch"

            # Checkout the PR branch
            git checkout "$pr_branch"

            # Rebase PR branch onto main
            if git rebase origin/main; then
              echo "Rebasing of PR #$pr_number ($pr_branch) successful!"

              # Force-push the rebased PR branch
              git push origin "$pr_branch" --force-with-lease
              echo "Successfully pushed rebased PR #$pr_number ($pr_branch)."
            else
              echo "::error::Rebase failed for PR #$pr_number ($pr_branch)."
              git rebase --abort
            fi
          done
